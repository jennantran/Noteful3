{"version":3,"sources":["noteContext.js","Button.js","NoteListNav/NoteListNav.js","NoteFunctions.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","AddFolder/AddFolder.js","AddNote.js","App/App.js","index.js"],"names":["React","createContext","notes","folders","addFolder","addNote","deleteNote","Button","props","tag","className","children","otherProps","createElement","join","defaultProps","NoteListNav","this","context","map","folder","key","id","to","folderId","filter","note","length","countNotesForFolder","name","Link","type","Component","contextType","NoteContext","NotePageNav","find","findFolder","noteId","findNote","match","params","onClick","history","goBack","Note","handleDelete","e","preventDefault","fetch","method","headers","then","res","ok","json","Promise","reject","catch","error","console","NoteListMain","folder_id","notesForFolder","getNotesForFolder","AddFolder","state","value","log","setState","event","newFolder","baseUrl","body","JSON","stringify","data","push","onSubmit","handleSubmit","placeholder","onChange","updateName","target","AddNote","updateFolder","content","newNote","options","updateContent","App","handleDeleteNote","all","notesResolve","foldersResolve","noteContext","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d567144.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    notes: [],\n    folders:[],\n    addFolder: () => {},\n    addNote: () => {},\n    deleteNote: () => {}\n  })\n  ","import React from 'react';\nimport './Button.css';\n\nexport default function Button(props){\n\nconst { tag, className, children, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['Button', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nButton.defaultProps ={\n  tag: 'a',\n}\n\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom'\nimport './NoteListNav.css';\nimport { countNotesForFolder } from '../NoteFunctions';\nimport NoteContext from '../noteContext';\nimport Button from '../Button';\n\nexport default class NoteListNav extends React.Component {\n    static contextType = NoteContext;\n\n    render(){\n        const { folders=[], notes=[] } = this.context\n        return (\n            <div className=\"NoteListNav\">\n                <ul className=\"NoteList\">\n                    {folders.map(folder =>\n                            <li key={folder.id}>\n                                <NavLink\n                                    className=\"NavFoldersLink\"\n                                    to={`/folder/${folder.id}`}\n                                    >\n                                         <span className='NoteListNav__num-notes'>\n                                             {countNotesForFolder(notes, folder.id)}\n                                         </span>\n                                    {folder.name}\n                                </NavLink>\n                            </li>\n                    )}\n                </ul>\n                    <div className=\"NoteListNavAddButton\">\n                        <Button\n                            tag={Link}\n                            className=\"addFolderButton\"\n                            to=\"/AddFolder\"\n                            type=\"button\"    \n                        >Add Folder</Button>\n                    </div>\n\n\n            </div>\n        );\n    }\n}\n\n\n","\nexport const findFolder = (folders=[], folderId) =>\nfolders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\nnotes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length","import React from 'react';\nimport NoteContext from '../noteContext'\nimport { findFolder } from '../NoteFunctions'\nimport { findNote } from '../NoteFunctions'\n\nexport default class NotePageNav extends React.Component {\n    static defaultProps={\n        history: {\n            goBack: () => {}\n        },\n        match: {\n            params: {}\n        }\n    }\n    static contextType = NoteContext;\n\n    render() {\n        const { notes, folders, } = this.context\n        const { noteId } = this.props.match.params\n        const note = findNote(notes, noteId) || {}\n        const folder = findFolder(folders, note.folderId)\n        return (\n            <div className=\"NotePageNav\">\n                <button \n                    className=\"backButton\"\n                    onClick={() => this.props.history.goBack()}>Back\n                </button>\n                {folder &&(\n                <h3 className=\"folderName\">\n                    {folder.name}\n                </h3>\n                )}\n            </div>\n         );\n    }\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport NoteContext from '../noteContext'\n\nexport default class Note extends React.Component {\n\n    static contextType = NoteContext;\n    \n        handleDelete = e => {\n            e.preventDefault();\n            const noteId = this.props.id;\n            const baseUrl = 'http://localhost:9090/notes/';\n            \n            fetch(`${baseUrl}/${noteId}`, {\n                method: 'DELETE',\n                headers:{\n                    'content-type': 'application/json'\n                },\n            })\n            .then(res => {\n                if(!res.ok){\n                    return res.json().then(e => Promise.reject(e))\n                }\n                return res.json()\n            })\n            .then(() => {\n                this.context.deleteNote(noteId)\n\n            })\n            .catch(error => {\n                console.error({error})\n            })\n        }\n        \n    render(){\n        const {name, id} = this.props\n        return(\n            <div className=\"note\">\n                <h2 className=\"noteTitle\">\n                    <Link to={`/note/${id}`}>\n                        {name}\n                    </Link>\n                </h2>\n                <button\n                    className=\"noteDelete\"\n                    type=\"button\"\n                    onClick={this.handleDelete}    \n                >\n                    Delete\n                </button>\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport Note from '../Note/Note';\nimport NoteContext from '../noteContext'\nimport {getNotesForFolder} from '../NoteFunctions'\nimport Button from '../Button';\nimport './NoteListMain.css';\nimport { Link } from 'react-router-dom'\n\nexport default class NoteListMain extends React.Component {\n    static defaultProps = {\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = NoteContext;\n\n    render(){\n        const { folder_id } = this.props.match.params;\n        const { notes =[] } = this.context;\n        const notesForFolder = getNotesForFolder(notes,folder_id);\n        return (\n            <section className=\"NoteListMain\">\n                <ul>\n                    {notesForFolder.map(note => \n                        <li key={note.id}>\n                            <Note\n                                id={note.id}\n                                name={note.name}    \n                            />\n                        </li>\n                        )}\n                </ul>\n                <div className=\"NoteListNavAddButton\">\n                        <Button\n                            className=\"addNoteButton\"\n                            to=\"/AddNote\"\n                            type=\"button\"  \n                            tag={Link}  \n                        >Add Notes</Button>\n                    </div>\n            </section>\n\n    )\n} \n}\n\n","import React, {Component} from 'react'\nimport NoteContext from '../noteContext'\n\n\nexport default class AddFolder extends Component {\n\n    static contextType = NoteContext;\n    constructor(props){\n        super(props);\n        this.state = {\n            name: {\n                value: \"\"\n            }\n        }\n    }\n\n    updateName(name){\n        console.log({name});\n        this.setState({\n            name: {value: name}\n        })\n\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const newFolder = {\n            name: this.state.name.value\n        };\n        const baseUrl = 'http://localhost:9090';\n        const foldersEndPoint = '/folders';\n        fetch(baseUrl + foldersEndPoint, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(newFolder)\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json()\n        })\n        .then(data => {\n            this.context.addFolder(data);\n            this.props.history.push(\"/\");\n        })\n        .catch(error => {\n            console.error(error);\n        });   \n    } \n\n    render(){\n        return(  \n                <form className=\"AddFolderForm\"\n                    onSubmit= {e => this.handleSubmit(e)} >\n                    <label>Name</label>\n                    <input\n                        type=\"text\"   \n                        name=\"name\"   \n                        id=\"name\"\n                        placeholder=\"name\"\n                        onChange={e => this.updateName(e.target.value)}\n                    />\n                    <input type=\"submit\"\n\n                    ></input>\n                </form>\n        );\n    }\n}","import React, {Component} from 'react';\nimport NoteContext from './noteContext'\n\n\nexport default class AddNote extends Component {\n    static contextType = NoteContext;\n\n    constructor(props){\n        super(props);\n        this.state = {\n            name: {\n                value: \"\",\n                content:\"\",\n                // folder_id\n            }\n        }\n    }\n    updateName(name){\n        console.log({name});\n        this.setState({\n            name: {value: name}\n        })\n    }\n\n    updateContent(content){\n        console.log({content});\n        this.setState({\n            content: {value: content}\n        })\n    }\n\n    updateFolder = (event) => {\n        console.log(\"update folder\");\n        this.setState({\n            folder_id: event.target.value\n        })\n    }\n\n     handleSubmit(event){\n         console.log(\"handlesubmit\");\n         event.preventDefault();\n \n         const newNote = {\n            name: this.state.name.value,\n            content: this.state.name.content,\n            // folder_id,\n       };\n\n        const baseUrl = 'http://localhost:9090';\n        const NoteEndPoint = '/notes';\n\n        fetch(baseUrl + NoteEndPoint, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newNote),\n        })\n        .then((res) => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json()\n        })\n        .then((data) => {\n            this.props.history.push(\"/\");\n        });\n     }\n\n    render(){\n        // const {name, content, folder_id} = this.state;\n\n        const options = this.context.folders.map((folder) => {\n            return(\n                <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                </option>\n            )\n        })\n        return(  \n                <form className=\"AddNoteForm\"\n                    onSubmit= {e => this.handleSubmit(e)} >\n                    <label>Name</label>\n                    <input\n                        type=\"text\"   \n                        id=\"name\"\n                        placeholder=\"name\"\n                        onChange={e => this.updateName(e.target.value)}\n                    />\n                    <label>Content</label>\n                    <input\n                        type=\"text\"   \n                        name=\"content\"   \n                        id=\"content\"\n                        onChange={e => this.updateContent(e.target.value)}\n                    /> \n                    <label>\n                        Folder: \n                    </label>\n                    <select \n                        className=\"folderId\"\n                        onChange={e => this.updateFolder(e.target.value)}>\n                        {options}\n                    </select>\n                    <input type=\"submit\"\n            \n                    ></input>\n                </form>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport noteContext from '../noteContext';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote';\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n    addFolder: this.addFolder,\n    addNote: this.addNote\n  };\n\n  componentDidMount() {\n    const baseUrl = 'http://localhost:9090';\n    const notesEndPoint = '/notes';\n    const foldersEndPoint = '/folders';\n\n    console.log(baseUrl + notesEndPoint);\n    console.log(baseUrl + foldersEndPoint);\n\n    Promise.all([\n      fetch(baseUrl + notesEndPoint),\n      fetch(baseUrl + foldersEndPoint)\n    ])\n      .then(([notesResolve, foldersResolve]) => {\n        if (!notesResolve.ok) {\n          return notesResolve.json().then(e => Promise.reject(e));\n        }\n        if (!foldersResolve.ok) {\n          return foldersResolve.json().then(e => Promise.reject(e));\n        }\n        return Promise.all([notesResolve.json(), foldersResolve.json()]);\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders });\n      })\n      .catch(error => {\n        console.error({ error })\n      });\n  }\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    });\n  }\n\n  addFolder = name => {\n    this.setState({\n      folders: [...this.state.folders, name]\n    })\n  }\n\n  addNote = (name, content, folder_id) => {\n    this.setState({\n      notes: [...this.state.notes, name, content, folder_id]\n    });\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.addFolder,\n      addNote: this.addNote\n    }\n\n    return (\n      <noteContext.Provider value={value}>\n        <div className=\"App\">\n          <nav className=\"navigation\">\n            <Route exact path=\"/\" component={NoteListNav} />\n            <Route path=\"/folder/:folder_id\" component={NoteListNav} />\n            <Route path=\"/notes/:note_id\" component={NotePageNav} />\n            <Route path=\"/AddFolder\" component={AddFolder} />\n          </nav>\n          <header className=\"appHeader\">\n            <h1>Noteful</h1>\n          </header>\n          <main className=\"appMain\">\n            <Route exact path=\"/\" component={NoteListMain} />\n            <Route path=\"/folder/:folder_id\" component={NoteListMain} />\n            <Route path=\"/AddNote\" component={AddNote} />\n          </main>\n        </div>\n      </noteContext.Provider>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}